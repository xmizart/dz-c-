internal class Program
{
    private static void Main(string[] args)
    {
        Console.CursorVisible = false;

        int unitPositionX = 1;
        int unitPositionY = 1;

        bool isExitChosen = false;

        char[,] map = new char[,]
        {
                {'#','#','#','#','#','#','#','#','#','#','#','#'},
                {'#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
                {'#','#','#','#','#','#',' ',' ',' ','#',' ','#'},
                {'#',' ',' ',' ',' ',' ','#','#','#','#',' ','#'},
                {'#',' ','#','#','#',' ',' ',' ',' ','#',' ','#'},
                {'#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#'},
                {'#','#','#','#','#','#','#','#','#','#','#','#'}
         };

        while (isExitChosen == false)
        {
            Console.Clear();
            DrawMap(map);
            Console.SetCursorPosition(unitPositionY, unitPositionX);
            Console.Write("@");
            ConsoleKeyInfo pressedKey = Console.ReadKey();
            HandleInput(pressedKey, ref unitPositionX, ref unitPositionY, map, ref isExitChosen);
        }
    }

    static void DrawMap(char[,] map)
    {
        for (int x = 0; x < map.GetLength(0); x++)
        {
            for (int y = 0; y < map.GetLength(1); y++)
            {
                Console.Write(map[x, y]);
            }

            Console.WriteLine();
        }
    }

    static void HandleInput(ConsoleKeyInfo pressedKey, ref int unitPositionX, ref int unitPositionY, char[,] map, ref bool isExitChosen)
    {
        int[] direction = GetDirection(pressedKey, ref isExitChosen);
        int nextUnitPosistionX = unitPositionX + direction[0];
        int nextUnitPosistionY = unitPositionY + direction[1];

        if (map[nextUnitPosistionX, nextUnitPosistionY] != '#')
        {
            unitPositionX = nextUnitPosistionX;
            unitPositionY = nextUnitPosistionY;
        }
    }

    static int[] GetDirection(ConsoleKeyInfo pressedKey, ref bool isExitChosen)
    {
        int[] direction = { 0, 0 };
        ConsoleKey moveUp = ConsoleKey.UpArrow;
        ConsoleKey moveDown = ConsoleKey.DownArrow;
        ConsoleKey moveLeft = ConsoleKey.LeftArrow;
        ConsoleKey moveRight = ConsoleKey.RightArrow;
        ConsoleKey exit = ConsoleKey.Escape;

        if (pressedKey.Key == moveUp)
            direction[0] = -1;
        else if (pressedKey.Key == moveDown)
            direction[0] = 1;
        else if (pressedKey.Key == moveLeft)
            direction[1] = -1;
        else if (pressedKey.Key == moveRight)
            direction[1] = 1;
        else if (pressedKey.Key == exit)
            isExitChosen = true;

        return direction;
    }
}
